"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–¥–µ–ª–∞–º
"""
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from app.config import MESSAGES
from app.keyboards.user import get_info_keyboard, get_back_to_start_keyboard

router = Router(name="commands")


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/course - –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞
/faq - –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
/reviews - –û—Ç–∑—ã–≤—ã –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤
/about - –û –Ω–∞—Å
/guarantees - –ù–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏
/why_crypto - –ü–æ—á–µ–º—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞
/success - –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞

üí° <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</i>
"""
    await message.answer(
        help_text,
        reply_markup=get_back_to_start_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("course"))
async def cmd_course(message: Message):
    """–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞"""
    await message.answer(
        MESSAGES['program'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("faq"))
async def cmd_faq(message: Message):
    """–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"""
    await message.answer(
        MESSAGES['faq'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("reviews"))
async def cmd_reviews(message: Message):
    """–û—Ç–∑—ã–≤—ã"""
    from app.database.queries import get_random_reviews
    
    reviews = await get_random_reviews(limit=3)
    
    text = "<b>üí¨ –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:</b>\n\n"
    
    for review in reviews:
        text += f"<b>{review.name}</b> ({review.country})"
        if review.profit:
            text += f" - <i>{review.profit}</i>"
        text += f"\n{review.text}\n\n"
    
    text += "<i>–≠—Ç–æ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å –æ—Ç–∑—ã–≤–æ–≤. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —É—Å–ø–µ—à–Ω—ã–º –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞–º!</i>"
    
    await message.answer(
        text,
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("about"))
async def cmd_about(message: Message):
    """–û –Ω–∞—Å"""
    await message.answer(
        MESSAGES['about_us'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("guarantees"))
async def cmd_guarantees(message: Message):
    """–ì–∞—Ä–∞–Ω—Ç–∏–∏"""
    await message.answer(
        MESSAGES['guarantees'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("why_crypto"))
async def cmd_why_crypto(message: Message):
    """–ü–æ—á–µ–º—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞"""
    await message.answer(
        MESSAGES['why_crypto'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("success"))
async def cmd_success(message: Message):
    """–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞"""
    await message.answer(
        MESSAGES['success_stories'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )


@router.message(Command("info"))
async def cmd_info(message: Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ"""
    await message.answer(
        MESSAGES['info'],
        reply_markup=get_info_keyboard(),
        parse_mode="HTML"
    )
