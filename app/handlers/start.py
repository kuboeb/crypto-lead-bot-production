"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from app.config import MESSAGES
from app.keyboards.user import get_start_keyboard, get_back_to_start_keyboard, get_after_application_keyboard
from app.database.queries import user_has_application, get_random_reviews

router = Router(name="start")


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if await user_has_application(message.from_user.id):
        await message.answer(
            MESSAGES['already_applied'],
            reply_markup=get_after_application_keyboard(),
            parse_mode="HTML"
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await message.answer(
        MESSAGES['welcome'],
        reply_markup=get_start_keyboard(),
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_start")
async def back_to_start(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—á–∞–ª—É"""
    await state.clear()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞—è–≤–∫–∞
    if await user_has_application(callback.from_user.id):
        await callback.message.edit_text(
            MESSAGES['already_applied'],
            reply_markup=get_after_application_keyboard(),
            parse_mode="HTML"
        )
        return
    
    await callback.message.edit_text(
        MESSAGES['welcome'],
        reply_markup=get_start_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "course_info")
async def show_course_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ"""
    await callback.message.edit_text(
        MESSAGES['info'],
        reply_markup=get_back_to_start_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "show_reviews")
async def show_reviews(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã"""
    # –ü–æ–ª—É—á–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—Ç–∑—ã–≤–∞
    reviews = await get_random_reviews(limit=3)
    
    text = "<b>üí¨ –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:</b>\n\n"
    
    for review in reviews:
        text += f"<b>{review.name}</b> ({review.country})"
        if review.profit:
            text += f" - <i>{review.profit}</i>"
        text += f"\n{review.text}\n\n"
    
    text += "<i>–≠—Ç–æ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å –æ—Ç–∑—ã–≤–æ–≤. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —É—Å–ø–µ—à–Ω—ã–º –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞–º!</i>"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_to_start_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()
